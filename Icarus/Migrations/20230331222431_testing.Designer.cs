// <auto-generated />
using System;
using Icarus.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Icarus.Migrations
{
    [DbContext(typeof(IcarusContext))]
    [Migration("20230331222431_testing")]
    partial class testing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Icarus.Context.Models.Gamestate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.ToTable("Gamestates");
                });

            modelBuilder.Entity("Icarus.Context.Models.Modifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationId")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Modifiers");
                });

            modelBuilder.Entity("Icarus.Context.Models.Nation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nations");
                });

            modelBuilder.Entity("Icarus.Context.Models.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationId")
                        .HasColumnType("int");

                    b.HasKey("ProvinceId");

                    b.HasIndex("NationId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Icarus.Context.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<float>("RelationInducedChange")
                        .HasColumnType("real");

                    b.Property<float>("_Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("Icarus.Context.Models.ValueModifier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Decay")
                        .HasColumnType("real");

                    b.Property<float>("Modifier")
                        .HasColumnType("real");

                    b.Property<int>("ModifierWrapperId")
                        .HasColumnType("int");

                    b.Property<string>("ValueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ModifierWrapperId");

                    b.ToTable("ValueModifiers");
                });

            modelBuilder.Entity("Icarus.Context.Models.ValueRelationship", b =>
                {
                    b.Property<int>("ValueRelationShipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<float>("Max")
                        .HasColumnType("real");

                    b.Property<float>("Min")
                        .HasColumnType("real");

                    b.Property<string>("OriginId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OriginId1")
                        .HasColumnType("int");

                    b.Property<string>("TargetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetId1")
                        .HasColumnType("int");

                    b.HasKey("ValueRelationShipId");

                    b.HasIndex("OriginId1");

                    b.HasIndex("TargetId1");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("Icarus.Context.Models.Gamestate", b =>
                {
                    b.HasOne("Icarus.Context.Models.Nation", "Nation")
                        .WithMany()
                        .HasForeignKey("NationId");
                });

            modelBuilder.Entity("Icarus.Context.Models.Modifier", b =>
                {
                    b.HasOne("Icarus.Context.Models.Nation", null)
                        .WithMany("Modifiers")
                        .HasForeignKey("NationId");

                    b.HasOne("Icarus.Context.Models.Province", null)
                        .WithMany("Modifiers")
                        .HasForeignKey("ProvinceId");
                });

            modelBuilder.Entity("Icarus.Context.Models.Province", b =>
                {
                    b.HasOne("Icarus.Context.Models.Nation", "Nation")
                        .WithMany("Provinces")
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Icarus.Context.Models.Value", b =>
                {
                    b.HasOne("Icarus.Context.Models.Province", "Province")
                        .WithMany("Values")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Icarus.Context.Models.ValueModifier", b =>
                {
                    b.HasOne("Icarus.Context.Models.Modifier", "ModifierWrapper")
                        .WithMany("Modifiers")
                        .HasForeignKey("ModifierWrapperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Icarus.Context.Models.ValueRelationship", b =>
                {
                    b.HasOne("Icarus.Context.Models.Value", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId1");

                    b.HasOne("Icarus.Context.Models.Value", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId1");
                });
#pragma warning restore 612, 618
        }
    }
}
